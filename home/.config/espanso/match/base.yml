imports:
  - "./_aws.yml"
  - "./_docker.yml"
  - "./_ripgrep.yml"

matches:
  - trigger: ":espanso"
    label: 'Simple text replacement'
    replace: Hi there!
              
  # Dates
  - trigger: ":date"
    replace: "{{mydate}}"
    vars:
      - name: mydate
        type: date
        params:
          format: "%m/%d/%Y"

  - trigger: ":time"
    replace: "{{time}}"
    vars:
      - name: time
        type: date
        params:
          format: "%H:%M"

  - trigger: ":isodate"
    replace: "{{isodate}}"
    vars:
      - name: isodate
        type: date
        params:
          format: "%Y-%m-%dT%H:%M:%S%z"

  - trigger: ":uuid,"
    replace: "{{myuuid}}"
    vars:
      - name: myuuid
        type: shell
        params:
          cmd: "uuidgen | tr 'A-Z' 'a-z'"

  - trigger: ":uuid0,"
    replace: "{{myuuid}}"
    vars:
      - name: myuuid
        type: shell
        params:
          cmd: "uuidgen | sed s/[a-zA-Z0-9]/0/g"

  - trigger: ":uuid1,"
    replace: "{{myuuid}}"
    vars:
      - name: myuuid
        type: shell
        params:
          cmd: "uuidgen | sed s/[a-zA-Z0-9]/1/g"

  - trigger: ":shell"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: echo Hello from your shell

  - trigger: ":jwt"
    replace: 'pbpaste | jq -R ''split(".") | .[0],.[1] | @base64d | fromjson'''

  ###########
  #         #
  #  Docker #
  #         #
  ###########
  # Moved to dcoker.yml

  #
  #
  #   _____             _                _____
  #  |  __ \           | |              / ____|
  #  | |  | | ___   ___| | _____ _ __  | |     ___  _ __ ___  _ __   ___  ___  ___
  #  | |  | |/ _ \ / __| |/ / _ \ '__| | |    / _ \| '_ ` _ \| '_ \ / _ \/ __|/ _ \
  #  | |__| | (_) | (__|   <  __/ |    | |___| (_) | | | | | | |_) | (_) \__ \  __/
  #  |_____/ \___/ \___|_|\_\___|_|     \_____\___/|_| |_| |_| .__/ \___/|___/\___|
  #                                                          | |
  #                                                          |_|
  #
  # Docker Compose
  - trigger: ":dc-d,"
    replace: docker-compose down $|$
  - trigger: ":dc-ps,"
    replace: docker-compose ps $|$
  - trigger: ":dc-v,"
    replace: docker-compose version $|$
  - trigger: ":dc-u,"
    replace: docker-compose up --remove-orphans $|$
  - trigger: ":dc-uD,"
    replace: docker-compose up --detach $|$
  - trigger: ":dn-rg,"
    replace: 'reportgenerator "-reports:coverage/lcov.info" "-targetdir:coverage/reports" "-reporttypes:Html;HtmlSummary" $|$'
  - trigger: ":dn-t,"
    replace: "dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:CoverletOutput=..coverage/lcov.info $|$"
  - trigger: ":dn-wr,"
    replace: dotnet watch run --project $|$

  # - trigger: ":dn-wt,"
  #   replace: "dotnet watch test /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:CoverletOutput=../coverage/lcov.info --project $|$"
  - trigger: ":dn-wt,"
    replace: |
      find . -name '*.sln' -maxdepth 1 -print -quit | xargs -I {} \
      dotnet watch test /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:CoverletOutput=../coverage/lcov.info \
      --project {} \
  - trigger: ":dn-wb,"
    replace: dotnet watch build --project $|$

  # https://docs.microsoft.com/en-us/ef/core/cli/dotnet
  # EF list migration
  - trigger: ":dn-ef-ml,"
    replace: dotnet ef migrations list $|$
  - trigger: ":dn-ef-ci,"
    replace: dotnet ef dbcontext info
  - trigger: ":dn-ef-cl,"
    replace: dotnet ef dbcontext list

  # DROP database and migration
  - trigger: ":dn-ef-DNM,"
    replace: dotnet ef database drop -f -v && dotnet ef database update

  - trigger: ":ip"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: "curl 'https://api.ipify.org'"

  # pet script
  - trigger: ";pet,"
    replace: "[[snippets]]\n  description = \"$|$\"\n  command = \"{{clipboard}}\"\n  tag = [\"\"]\n  output = \"\"\n"
    vars:
      - name: clipboard
        type: clipboard

  # markdown
  - trigger: ";md-title,"
    replace: "---\ntitle: \"$|$\"\nkeywords:\n  - TBD\n\n...\n"
    vars:
      - name: clipboard
        type: clipboard

  #
  #
  #                   _
  #                  | |
  #    ___ _   _ _ __| |
  #   / __| | | | '__| |
  #  | (__| |_| | |  | |
  #   \___|\__,_|_|  |_|
  #
  #
  #
  # curl
  - trigger: ":curl-Pon,"
    replace: "export http_proxy=localhost:8080;export https_proxy=localhost:8080"
  - trigger: ":curl-Poff,"
    replace: unset http_proxy; unset https_proxy

  # code
  - triggers: [":code$,", "#code,"]
    label: "code - open files"
    replace: "code ${$|$}"

  # xargs
  - triggers: [":x,", "#xargs,"]
    label: "xargs starter"
    replace: "| xargs -I {} $|$ {}"
  - triggers: [":x-sed,", "#xargs,"]
    label: "xargs with sample gnu sed"
    replace: "| xargs -I {} gsed -i -e 's/$|$/g' {}"

  # mongosh
  - triggers: [":mongosh-e,", "#mongosh,", "#complex,"]
    label: "Start mongosh with eval"
    replace: mongosh --quiet --norc --eval "db.version()$|$"

  # sed
  - triggers: [":sed-dw,", "#sed,", "#complex,"]
    label: "sed - Duplicate words"
    replace: "sed 's/\\(.*\\)/\\1$|$/\\1/'"

  # complex commands
  - triggers: [":kill-port,", "#complex,"]
    label: "kill process attached to port 3000 (Mac)"
    replace: "lsof -t -i tcp:3000$|$ | xargs kill"

  - triggers: [":cat-file,", "#complex,"]
    label: "Snippet to generate cat file"
    replace:  |-
      cat <<EOF > file$|$
      EOF

  - triggers: [":buf-echo,", "#complex,"]
    label: "Echo words from buffer"
    replace:  |-
      pbpaste | while read OLD NEW; do\
        $|$echo "$OLD : $NEW" ;\
      done

  - triggers: [":buf-rg,", "#complex,"]
    label: "Replace words from column buffer"
    replace:  |-
      pbpaste | while read OLD NEW; do \
        echo "export _OLD=$OLD && export _NEW=$NEW && \
        rg \${_OLD} --hidden -l . \
        | xargs -I {} sh -c 'gsed -i -e \"s/\${_OLD}/\${_NEW}/g\" {}'" \
      ; done

  - triggers: [":one-liner,", "#complex,"]
    label: "Compact by stripping duplicate space and linefeed"
    replace: awk '{ printf "%s", $0 }' | awk '$1=$1'

  # TO DELETE below.
  - trigger: rrgs
    force_clipboard: true
    replace: "group_by($|$) %>%\n    summarise()\n"
  - trigger: ":greet"
    replace: |-
      Hey $0$, how are you?
      It's been a while!
    passive_only: true
  - trigger: ":reversed"
    replace: "Reversed {{myshell}}"
    vars:
      - name: mytime
        type: date
        params:
          format: "%H:%M"
      - name: myshell
        type: shell
        params:
          cmd: echo $ESPANSO_MYTIME | rev

  - trigger: ":file"
    replace: "{{form1.file}}"
    vars:
      - name: files
        type: shell
        params:
          cmd: "find ~/Documents -maxdepth 1"
      - name: form1
        type: form
        params:
          layout: |
            Select file:
            [[file]]
          fields:
            file:
              type: list
              values: "{{files}}"